--- mnesia_original/src/mnesia_monitor.erl	2012-03-14 18:58:25.000000000 +0100
+++ mnesia_patch/src/mnesia_monitor.erl	2012-03-14 18:50:49.000000000 +0100
@@ -29,10 +29,11 @@
 	 detect_inconcistency/2,
 	 get_env/1,
 	 init/0,
 	 mktab/2,
 	 unsafe_mktab/2,
+         unsafe_create_external/3,
 	 mnesia_down/2,
 	 needs_protocol_conversion/1,
 	 negotiate_protocol/1,
 	 disconnect/1,
 	 open_dets/2,
@@ -122,10 +123,12 @@
     unsafe_call({close_log, Name}).
 
 unsafe_close_log(Name) ->
     unsafe_call({unsafe_close_log, Name}).
 
+unsafe_create_external(Tab, Mod, Cs) ->
+    unsafe_call({unsafe_create_external, Tab, Mod, Cs}).
 
 disconnect(Node) ->
     cast({disconnect, Node}).
 
 %% Returns GoodNoodes
@@ -396,10 +399,18 @@
 
 handle_call({unsafe_close_log, Name}, _From, State) ->
     disk_log:close(Name),
     {reply, ok, State};
 
+handle_call({unsafe_create_external, Tab, Mod, Cs}, _From, State) ->
+    case catch Mod:create_table(Tab, Cs) of
+      {'EXIT', ExitReason} ->
+          {reply, {error, ExitReason}, State};
+      Reply ->
+          {reply, Reply, State}
+    end;
+
 handle_call({negotiate_protocol, Mon, _Version, _Protocols}, _From, State)
   when State#state.tm_started == false ->
     State2 =  State#state{early_connects = [node(Mon) | State#state.early_connects]},
     {reply, {node(), {reject, self(), uninitialized, uninitialized}}, State2};
 
